---
// Importations nécessaires
import { getLangFromUrl } from '../i18n/utils';

// Obtenez la langue actuelle à partir de l'URL
const currentLang = getLangFromUrl(Astro.url);
---

<select id="languageSelector" data-current-lang={currentLang}>
  <option value="fr">French</option>
  <option value="en">English</option>
  <option value="it">Italian</option>
</select>

<script>
  type LanguageKeys = 'fr' | 'en' | 'it';

  function translatePath(path: string, fromLang: LanguageKeys, toLang: LanguageKeys): string {
    const translations: { [key: string]: { [lang in LanguageKeys]?: string } } = {
    travail: { en: 'work', it: 'lavoro' },
    parcours: { en: 'about', it: 'percorso' },
    work: { fr: 'travail', it: 'lavoro'}, 
    about: { fr: 'parcours', it: 'percorso'}, 
    lavoro: { fr: 'travail', en: 'work'}, 
    percorso: { fr: 'parcours', en: 'about'} 
  };

  const segments = path.split('/').filter(segment => segment !== fromLang);

  const translatedSegments = segments.map(segment => {
    if (segment in translations) {
      const translation = translations[segment as keyof typeof translations];
      return translation[toLang];
    }
    return segment;
  });

  return `${toLang}${translatedSegments.join('/')}`;
}

  function getLangFromClientSideUrl(url:any) {
    // Récupérer les segments de l'URL et supposer que le premier segment est la langue
    const pathSegments = url.pathname.split('/').filter(Boolean);
    return pathSegments[0];
  }

  function handleLanguageChange(event: Event): void {
    const selectElement = event.target as HTMLSelectElement;
    const newLang = selectElement.value as LanguageKeys;
    const currentUrl = new URL(window.location.href);
    const currentLang = getLangFromClientSideUrl(currentUrl); // Obtenir la langue actuelle de l'URL
    const translatedPath = translatePath(currentUrl.pathname, currentLang, newLang);
    const newUrl = `${currentUrl.protocol}//${currentUrl.host}/${translatedPath}`;
    window.location.href = newUrl;
  }

  // Configuration initiale du sélecteur de langue et récupération de currentLang
  const languageSelector = document.getElementById('languageSelector');
  if (languageSelector && languageSelector instanceof HTMLSelectElement) {
    const currentLang = languageSelector.dataset.currentLang || 'fr';
    languageSelector.value = currentLang;
    languageSelector.addEventListener('change', handleLanguageChange);
  }
</script>

<style>
  #languageSelector {
  padding: 5px 5px;
  border: 1px solid #ddd;
  border-radius: 20px;
  background-color: var(--accent-dark);
  color: var(--gray-900);
  font-family: 'Arial', sans-serif;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  transition: border-color 0.3s, box-shadow 0.3s;
}

#languageSelector:hover {
  border-color: #0d0d0d;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

#languageSelector:focus {
  outline: none;
  border-color: #5b9bd5;
}
</style>